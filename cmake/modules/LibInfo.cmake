# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

if (NOT DEFINED TVM_INFO_LLVM_VERSION)
  set(TVM_INFO_LLVM_VERSION "NOT-FOUND")
else()
  string(STRIP ${TVM_INFO_LLVM_VERSION} TVM_INFO_LLVM_VERSION)
endif()
if (NOT DEFINED CUDA_VERSION)
  set(TVM_INFO_CUDA_VERSION "NOT-FOUND")
else()
  string(STRIP ${CUDA_VERSION} TVM_INFO_CUDA_VERSION)
endif()

set(TVM_LIBINFO_PYTHON_GENERATOR "${CMAKE_SOURCE_DIR}/cmake/modules/LibInfo_generate.py")
set(TVM_LIBINFO_CC_FILE "${CMAKE_BINARY_DIR}/src/support/libinfo.cc")
list(APPEND COMPILER_SRCS "${TVM_LIBINFO_CC_FILE}")

add_custom_command(
  OUTPUT "${TVM_LIBINFO_CC_FILE}"

  DEPENDS
  "${TVM_LIBINFO_PYTHON_GENERATOR}"

  COMMAND "${TVM_LIBINFO_PYTHON_GENERATOR}"
  -o "${TVM_LIBINFO_CC_FILE}"

  GIT_COMMIT_HASH="${TVM_GIT_COMMIT_HASH}"
  GIT_COMMIT_TIME=${TVM_GIT_COMMIT_TIME}
  USE_CUDA="${USE_CUDA}"
  USE_OPENCL="${USE_OPENCL}"
  USE_VULKAN="${USE_VULKAN}"
  USE_METAL="${USE_METAL}"
  USE_ROCM="${USE_ROCM}"
  ROCM_PATH="${ROCM_PATH}"
  USE_HEXAGON_DEVICE="${USE_HEXAGON_DEVICE}"
  USE_HEXAGON_SDK="${USE_HEXAGON_SDK}"
  USE_ETHOSN="${USE_ETHOSN}"
  USE_RPC="${USE_RPC}"
  USE_THREADS="${USE_THREADS}"
  USE_LLVM="${USE_LLVM}"
  LLVM_VERSION="${TVM_INFO_LLVM_VERSION}"
  CUDA_VERSION="${TVM_INFO_CUDA_VERSION}"
  USE_STACKVM_RUNTIME="${USE_STACKVM_RUNTIME}"
  USE_GRAPH_EXECUTOR="${USE_GRAPH_EXECUTOR}"
  USE_PROFILER="${USE_PROFILER}"
  USE_OPENMP="${USE_OPENMP}"
  USE_RELAY_DEBUG="${USE_RELAY_DEBUG}"
  USE_RTTI="${USE_RTTI}"
  USE_MSVC_MT="${USE_MSVC_MT}"
  USE_MICRO="${USE_MICRO}"
  INSTALL_DEV="${INSTALL_DEV}"
  HIDE_PRIVATE_SYMBOLS="${HIDE_PRIVATE_SYMBOLS}"
  USE_TF_TVMDSOOP="${USE_TF_TVMDSOOP}"
  USE_FALLBACK_STL_MAP="${USE_FALLBACK_STL_MAP}"
  USE_BYODT_POSIT="${USE_BYODT_POSIT}"
  USE_BLAS="${USE_BLAS}"
  USE_MKL="${USE_MKL}"
  USE_MKLDNN="${USE_MKLDNN}"
  USE_DNNL_CODEGEN="${USE_DNNL_CODEGEN}"
  USE_CUDNN="${USE_CUDNN}"
  USE_CUBLAS="${USE_CUBLAS}"
  USE_THRUST="${USE_THRUST}"
  USE_MIOPEN="${USE_MIOPEN}"
  USE_ROCBLAS="${USE_ROCBLAS}"
  USE_SORT="${USE_SORT}"
  USE_NNPACK="${USE_NNPACK}"
  USE_RANDOM="${USE_RANDOM}"
  USE_MICRO_STANDALONE_RUNTIME="${USE_MICRO_STANDALONE_RUNTIME}"
  USE_CPP_RPC="${USE_CPP_RPC}"
  USE_TFLITE="${USE_TFLITE}"
  USE_TENSORFLOW_PATH="${USE_TENSORFLOW_PATH}"
  USE_COREML="${USE_COREML}"
  USE_TARGET_ONNX="${USE_TARGET_ONNX}"
  USE_ARM_COMPUTE_LIB="${USE_ARM_COMPUTE_LIB}"
  USE_ARM_COMPUTE_LIB_GRAPH_EXECUTOR="${USE_ARM_COMPUTE_LIB_GRAPH_EXECUTOR}"
  INDEX_DEFAULT_I64="${INDEX_DEFAULT_I64}"
  TVM_CXX_COMPILER_PATH="${CMAKE_CXX_COMPILER}"
  )
